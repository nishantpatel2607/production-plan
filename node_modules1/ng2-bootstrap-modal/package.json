{
  "_args": [
    [
      {
        "raw": "ng2-bootstrap-modal@https://github.com/Sky4CE/ng2-bootstrap-modal/tarball/v.1.0.2",
        "scope": null,
        "escapedName": "ng2-bootstrap-modal",
        "name": "ng2-bootstrap-modal",
        "rawSpec": "https://github.com/Sky4CE/ng2-bootstrap-modal/tarball/v.1.0.2",
        "spec": "https://github.com/Sky4CE/ng2-bootstrap-modal/tarball/v.1.0.2",
        "type": "remote"
      },
      "D:\\Projects\\Sun Sterifaab\\production-plan"
    ]
  ],
  "_from": "https://github.com/Sky4CE/ng2-bootstrap-modal/tarball/v.1.0.2",
  "_id": "ng2-bootstrap-modal@1.0.2",
  "_inCache": true,
  "_location": "/ng2-bootstrap-modal",
  "_phantomChildren": {},
  "_requested": {
    "raw": "ng2-bootstrap-modal@https://github.com/Sky4CE/ng2-bootstrap-modal/tarball/v.1.0.2",
    "scope": null,
    "escapedName": "ng2-bootstrap-modal",
    "name": "ng2-bootstrap-modal",
    "rawSpec": "https://github.com/Sky4CE/ng2-bootstrap-modal/tarball/v.1.0.2",
    "spec": "https://github.com/Sky4CE/ng2-bootstrap-modal/tarball/v.1.0.2",
    "type": "remote"
  },
  "_requiredBy": [
    "/"
  ],
  "_resolved": "https://github.com/Sky4CE/ng2-bootstrap-modal/tarball/v.1.0.2",
  "_shasum": "95eaf9640da248d5d94b55454c0d7292cf99e6b6",
  "_shrinkwrap": null,
  "_spec": "ng2-bootstrap-modal@https://github.com/Sky4CE/ng2-bootstrap-modal/tarball/v.1.0.2",
  "_where": "D:\\Projects\\Sun Sterifaab\\production-plan",
  "author": {
    "name": "Vitalii Tiunisov",
    "email": "tyunisov@gmail.com",
    "url": "Sky4CE"
  },
  "bugs": {
    "url": "https://github.com/Sky4CE/ng2-bootstrap-modal/issues"
  },
  "dependencies": {},
  "description": "It is a library to make managment of bootstrap modal dialogs easier in Angular2",
  "devDependencies": {
    "@angular/common": "^2.4.9",
    "@angular/compiler": "^2.4.9",
    "@angular/compiler-cli": "^2.4.9",
    "@angular/core": "^2.4.9",
    "@angular/platform-browser": "^2.4.9",
    "@angular/platform-server": "^2.4.9",
    "rxjs": "^5.0.3",
    "typescript": "^2.2.1",
    "zone.js": "^0.7.6"
  },
  "homepage": "https://github.com/Sky4CE/ng2-bootstrap-modal#readme",
  "keywords": [
    "angular2",
    "bootstrap",
    "dialog",
    "modal"
  ],
  "license": "MIT",
  "main": "index.js",
  "name": "ng2-bootstrap-modal",
  "optionalDependencies": {},
  "readme": "#Angular2 Bootstrap Modal Service\n\nIt is a library to make usage of bootstrap modal plugin easier in Angular2. \nCreate clear and reusable modal components.\nIt makes managing dialogs painless and clearer. \n\nLibrary does not use bootstrap js, only css.\n\nCompatible with bootstrap 3 and bootstrap 4.\n\n\n\n##Installation\n```npm\nnpm install ng2-bootstrap-modal\n```\nSee [Live Demo](https://plnkr.co/edit/MB6NnzfhicMyAiMJy6YM?p=preview) \n\n###Without bootstrap?\nYes, you can create your own CSS. Just write css for .modal and .modal-dialog classes.\n\n```css\n.modal {\n    position: fixed;\n    top: 0;\n    right: 0;\n    bottom: 0;\n    left: 0;\n    z-index: 1050;\n    overflow: hidden;\n    -webkit-overflow-scrolling: touch;\n    outline: 0;\n}\n\n.fade {\n    opacity: 0;\n    -webkit-transition: opacity .15s linear;\n    -o-transition: opacity .15s linear;\n    transition: opacity .15s linear;\n}\n\n.fade.in {\n    opacity: 1;\n}\n\n.modal-dialog {\n    position: relative;\n    width: auto;\n    margin: 10px;\n}\n\n.modal.in .modal-dialog {\n    -webkit-transform: translate(0,0);\n    -ms-transform: translate(0,0);\n    -o-transform: translate(0,0);\n    transform: translate(0,0);\n}\n\n.modal.fade .modal-dialog {\n    -webkit-transition: -webkit-transform .3s ease-out;\n    -o-transition: -o-transform .3s ease-out;\n    transition: transform .3s ease-out;\n    -webkit-transform: translate(0,-25%);\n    -ms-transform: translate(0,-25%);\n    -o-transform: translate(0,-25%);\n    transform: translate(0,-25%);\n}\n\n@media (min-width: 768px) {\n    .modal-dialog {\n        width: 600px;\n        margin: 30px auto;\n    }\n}\n```\n\n##Quickstart\n\n### Step 1. add bootstrap CSS  \nYou can add bootstrap CSS from CDN\n```html\n<!-- Bootstrap 3.x -->\n<link rel=\"stylesheet\" href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css\" integrity=\"sha384-BVYiiSIFeK1dGmJRAkycuHAHRg32OmUcww7on3RYdg4Va+PmSTsz/K68vbdEjh4u\" crossorigin=\"anonymous\">\n```\nor \n```html\n<!-- Bootstrap 4.x -->\n<link rel=\"stylesheet\" href=\"https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0-alpha.6/css/bootstrap.min.css\" integrity=\"sha384-rwoIResjU2yc3z8GV/NPeZWAv56rSmLldC3R/AZzGRnGxQQKnKkoFVhFQhNUwEyJ\" crossorigin=\"anonymous\">\n```\n\n\n### Step 1. import '**BootstrapModalModule**' module\n\napp.module.ts:\n```typescript\nimport { NgModule} from '@angular/core';\nimport { CommonModule } from \"@angular/common\";\nimport { BrowserModule } from '@angular/platform-browser';\nimport { BootstrapModalModule } from 'ng2-bootstrap-modal';\nimport { AppComponent } from './app.component';\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    CommonModule,\n    BrowserModule,\n    BootstrapModalModule\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule {}\n```\nBy default, dialog placeholder will be added to AppComponent.\nBut you can select custom placeholder (i.e. document body):\n```typescript\nimports: [\n    ...\n    BootstrapModalModule.forRoot({container:document.body})\n  ]\n```\n\n\n###Step 2. Create your modal dialog component \nYour modal dialog is expected to be extended from **DialogComponent**.\n**DialogService** is generic class with two arguments:\n1) input dialog data type (data to initialize component);\n2) dialog result type;\n\nTherefore **DialogService** is supposed to be a constructor argument of **DialogComponent**.\n\nconfirm.component.ts:\n```typescript\nimport { Component } from '@angular/core';\nimport { DialogComponent, DialogService } from \"ng2-bootstrap-modal\";\nexport interface ConfirmModel {\n  title:string;\n  message:string;\n}\n@Component({  \n    selector: 'confirm',\n    template: `<div class=\"modal-dialog\">\n                <div class=\"modal-content\">\n                   <div class=\"modal-header\">\n                     <button type=\"button\" class=\"close\" (click)=\"close()\" >&times;</button>\n                     <h4 class=\"modal-title\">{{title || 'Confirm'}}</h4>\n                   </div>\n                   <div class=\"modal-body\">\n                     <p>{{message || 'Are you sure?'}}</p>\n                   </div>\n                   <div class=\"modal-footer\">\n                     <button type=\"button\" class=\"btn btn-primary\" (click)=\"confirm()\">OK</button>\n                     <button type=\"button\" class=\"btn btn-default\" (click)=\"close()\" >Cancel</button>\n                   </div>\n                 </div>\n              </div>`\n})\nexport class ConfirmComponent extends DialogComponent<ConfirmModel, boolean> implements ConfirmModel {\n  title: string;\n  message: string;\n  constructor(dialogService: DialogService) {\n    super(dialogService);\n  }\n  confirm() {\n    // we set dialog result as true on click on confirm button, \n    // then we can get dialog result from caller code \n    this.result = true;\n    this.close();\n  }\n}\n```\n\n###Step 3. Register created component to module\nAdd component to **declarations** and **entryComponents** section, because the component\nwill be created dynamically.\n\napp.module.ts:\n```typescrit\n    import { NgModule} from '@angular/core';\n    import { CommonModule } from \"@angular/common\";\n    import { BrowserModule } from '@angular/platform-browser';\n    import { BootstrapModalModule } from 'ng2-bootstrap-modal';\n    import { ConfirmComponent } from './confirm.component';\n    import { AppComponent } from './app.component';\n    @NgModule({\n      declarations: [\n        AppComponent,\n        ConfirmComponent\n      ],\n      imports: [\n        CommonModule,\n        BrowserModule,\n        BootstrapModalModule\n      ],\n      //Don't forget to add the component to entryComponents section\n      entryComponents: [\n        ConfirmComponent\n      ],\n      bootstrap: [AppComponent]\n    })\n    export class AppModule {}\n```\n\n###Step 4. Usage\n\napp.component.ts\n```typescript\n    import { Component } from '@angular/core';\n    import { ConfirmComponent } from './confirm.component';\n    import { DialogService } from \"ng2-bootstrap-modal\";\n    \n    @Component({\n      selector: 'app',\n      template: `\n        <div class=\"container\">\n          <button class=\"btn btn-default\" (click)=showConfirm()>Show confirm</button>\n        </div>\n      `\n    })\n    export class AppComponent {\n        constructor(private dialogService:DialogService) {}\n        showConfirm() {\n            let disposable = this.dialogService.addDialog(ConfirmComponent, {\n                title:'Confirm title', \n                message:'Confirm message'})\n                .subscribe((isConfirmed)=>{\n                    //We get dialog result\n                    if(isConfirmed) {\n                        alert('accepted');\n                    }\n                    else {\n                        alert('declined');\n                    }\n                });\n            //We can close dialog calling disposable.unsubscribe();\n            //If dialog was not closed manually close it by timeout\n            setTimeout(()=>{\n                disposable.unsubscribe();\n            },10000);\n        }\n    }\n```\n\n##Documentation\n\n###DialogComponent\nSuper class of all modal components.\n####Class Overview\n```typescript\n/**\n* Dialog abstract class\n* @template T1 - input dialog data\n* @template T2 - dialog result\n*/\nabstract class DialogComponent<T1, T2> implements T1 {\n    /**\n    * Constructor\n    * @param {DialogService} dialogService - instance of DialogService\n    */\n    constructor(dialogService: DialogService)\n    \n    /**\n    * Dialog result \n    * @type {T2}\n    */\n    protected result:T2\n    \n    /**\n    * Closes dialog\n    */\n    public close:Function\n}\n```\n\n###DialogOptions \n```typescript\ninterface DialogOptions {\n  /**\n  * Dialog index (optional) to set order of modals\n  * @type {number}\n  */\n  index?: number;\n \n  /**\n  * Timestamp to close dialog automatically after timeout (in msec)\n  * @type {number}\n  */\n  autoCloseTimeout?: number;\n  \n  /**\n  * Flag to close dialog by click on backdrop (outside dialog)\n  * @type {boolean}\n  */\n  closeByClickingOutside?: boolean;\n  \n  /**\n   * Custom backdrop color\n   * Default backdrop color you can set via css (.modal {backgroundColor:...})\n   * @type {string}\n   */\n  backdropColor?: string;\n}\n```\n\n###DialogService \nService to show dialogs\n\n###Class Overview\n```typescript\nclass DialogService {\n    /**\n    * Adds dialog\n    * @param {Type<DialogComponent<T1, T2>} component - Modal dialog component\n    * @param {T1?} data - Initialization data for component (optional) to add to component instance and can be used in component code or template \n    * @param {DialogOptions?} Dialog options\n    * @return {Observable<T2>} - returns Observable to get dialog result\n    */\n    public addDialog<T1, T2>(component:Type<DialogComponent<T1, T2>>, data?:T1, options: DialogOptions): Observable<T2> => {}\n}\n```\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/Sky4CE/ng2-bootstrap-modal.git"
  },
  "scripts": {
    "build": "rm -rf dist && ngc",
    "win-build": "(if exist rd /s /q dist) && ngc"
  },
  "version": "1.0.2"
}
